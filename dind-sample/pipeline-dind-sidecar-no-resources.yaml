---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dind-no-resources
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: the branch for the git repo
    - name: image-url
      description: the url of the image to build
    - name: pipeline-debug
      default: "0"
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: properties-file
          value: ""
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: build-and-push-docker
      runAfter: [clone-repository]
      taskRef:
        name: icr-execute-in-dind
      params:
        - name: image-url
          value: $(params.image-url)
        - name: image-tag
          value: $(tasks.clone-repository.results.git-branch)-$(tasks.clone-repository.results.git-commit)
        - name: docker-commands
          value: |
            env | sort
            pwd
            ls -l
            docker build -t us.icr.io/ibm_cloud_databases_dev/redis-db-6.0.4:ab36c37-dirty --build-arg ARTIFACTORY_USERNAME=ARTIFACTORY_USERNAME --build-arg ARTIFACTORY_TOKEN=ARTIFACTORY_TOKEN --build-arg ARTIFACTORY_REPO=ARTIFACTORY_REPO --build-arg REGISTRY=us.icr.io/ibm_cloud_databases_dev --build-arg VERSION=6.0.4 --build-arg PIP_EXTRA_INDEX=na.artifactory.swg-devops.com/artifactory/api/pypi/wcp-icd-pypi-local/simple --build-arg PIP_EXTRA_INDEX_URL=https://jaunin.b%40fr.ibm.com_:redacted@na.artifactory.swg-devops.com/artifactory/api/pypi/wcp-icd-pypi-local/simple --build-arg CH_VERSION=0.4.1 --build-arg POD_LABELER_VERSION=0.1.1-1 --build-arg UBI_VERSION=8 --build-arg BASE_UBI_MINIMAL_8_VERSION=sha256:c8a6e8dae899409b77e759f56e7fe3d24e9aa201424dc61109513d4bd96facc9 --build-arg MGMT_UBI_MINIMAL_8_VERSION=sha256:1e682e89039890d31026cd9b25f73c507ff0b03f31f9bec7e51c7706414cfa6c --build-arg PORTAL_UBI_MINIMAL_8_VERSION=sha256:4e248b7990c8cec79c4e41a4cdad8a5043e4a92fc357c3fdb962d1f94e7d4e3f --build-arg ENVOY_UBI_MINIMAL_8_VERSION=sha256:03b5da54eabe2435c4e10e88ad820105bed8e01245554998936d0fb15a81e6b0 --build-arg LATEST_BASE_UBI_MINIMAL_8_VERSION=sha256:8a49eedade01acd75e614a9acfb7601e8042e6ffd77348f7ccb6a0dd13d81cd5 -f redis/6.0.4/db/Dockerfile .
        - name: properties-file
          value: ""
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: source
          workspace: pipeline-ws
    - name: va-scan-task
      runAfter: [build-and-push-docker]
      taskRef:
        name: icr-check-va-scan
      params:
        - name: scan-report-file
          value: "app-image-va-report.json"
        # - name: max-iteration
        #   value: '5'
        # - name: sleep-time
        #   value: '3'
        # - name: fail-on-scanned-issues
        #   value: 'false'
        - name: image-url
          value: $(tasks.build-and-push-docker.results.image-repository)
        - name: image-digest
          value: $(tasks.build-and-push-docker.results.image-digest)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
